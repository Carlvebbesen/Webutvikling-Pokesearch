"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_express_1 = require("apollo-server-express");
exports.typeDefs = (0, apollo_server_express_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Pokemon {\n        entry_number: Int,\n        name: String,\n        pokeTypes: [String!]!,\n        stats: Stats,\n        weight: Int,\n        rating: Float,\n        rating_count: Int,\n        usage_percentage: Float,\n        sprite_url: String,\n    }\n\n    type PokemonFilter {\n        pokemons: [Pokemon],\n        count: Int,\n    }\n\n    type Stats {\n        hp: Int,\n        attack: Int,\n        defense: Int,\n        special_attack: Int,\n        special_defense: Int,\n        speed: Int,\n        total: Int,\n    }\n\n    type Team {\n        name: String,\n        pokemon: [Pokemon]!,\n    }\n\n    input StatInput {\n        name: String,\n        base_stat: Int,\n    }\n\n    input FilterInput {\n        name: String,\n        pokeTypes: [String],\n        rating: Float,\n        limit: Int!,\n        offset: Int!,\n        sortBy: String,\n        sortDesc: Boolean,\n    } \n\n    input TeamInput {\n        name: String,\n    }\n\n    input AddPokemonInput {\n        teamName: String,\n        newPokemonName: String,\n        index: Int,\n    }\n\n    input RatePokemonInput {\n        id: Int,\n        rating: Float,\n    }\n\n    type Query {\n        getFilteredPokemon(input: FilterInput): PokemonFilter,\n        getAllTeams:[Team]\n    }\n\n    type Mutation {\n        createTeam(input:TeamInput):Team,\n        addPokemon(input:AddPokemonInput):Team,\n        ratePokemon(input:RatePokemonInput):Pokemon,\n    }\n\n"], ["\n    type Pokemon {\n        entry_number: Int,\n        name: String,\n        pokeTypes: [String!]!,\n        stats: Stats,\n        weight: Int,\n        rating: Float,\n        rating_count: Int,\n        usage_percentage: Float,\n        sprite_url: String,\n    }\n\n    type PokemonFilter {\n        pokemons: [Pokemon],\n        count: Int,\n    }\n\n    type Stats {\n        hp: Int,\n        attack: Int,\n        defense: Int,\n        special_attack: Int,\n        special_defense: Int,\n        speed: Int,\n        total: Int,\n    }\n\n    type Team {\n        name: String,\n        pokemon: [Pokemon]!,\n    }\n\n    input StatInput {\n        name: String,\n        base_stat: Int,\n    }\n\n    input FilterInput {\n        name: String,\n        pokeTypes: [String],\n        rating: Float,\n        limit: Int!,\n        offset: Int!,\n        sortBy: String,\n        sortDesc: Boolean,\n    } \n\n    input TeamInput {\n        name: String,\n    }\n\n    input AddPokemonInput {\n        teamName: String,\n        newPokemonName: String,\n        index: Int,\n    }\n\n    input RatePokemonInput {\n        id: Int,\n        rating: Float,\n    }\n\n    type Query {\n        getFilteredPokemon(input: FilterInput): PokemonFilter,\n        getAllTeams:[Team]\n    }\n\n    type Mutation {\n        createTeam(input:TeamInput):Team,\n        addPokemon(input:AddPokemonInput):Team,\n        ratePokemon(input:RatePokemonInput):Pokemon,\n    }\n\n"])));
var templateObject_1;
